name: CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: actions/cache@v3
        id: cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install yarn
        run: npm i --location=global yarn
      - name: Install project deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: ESLint
        run: yarn lint

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: actions/cache@v3
        id: cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install yarn
        run: npm i --location=global yarn
      - name: Install project deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: ESLint
        run: yarn format

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: actions/cache@v3
        id: cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install yarn
        run: npm i --location=global yarn
      - name: Install project deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Build
        run: yarn build
